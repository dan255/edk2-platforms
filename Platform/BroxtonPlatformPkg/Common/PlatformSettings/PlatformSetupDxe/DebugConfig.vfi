// /** @file
//  Debug Configuration formset.
//
//  Copyright (c) 1999 - 2017, Intel Corporation. All rights reserved.<BR>
//
//  This program and the accompanying materials
//  are licensed and made available under the terms and conditions of the BSD License
//  which accompanies this distribution.  The full text of the license may be found at
//  http://opensource.org/licenses/bsd-license.php.
//
//  THE PROGRAM IS DISTRIBUTED UNDER THE BSD LICENSE ON AN "AS IS" BASIS,
//  WITHOUT WARRANTIES OR REPRESENTATIONS OF ANY KIND, EITHER EXPRESS OR IMPLIED.
//
// **/


form formid = DEBUG_CONFIGURATION_FORM_ID,
  title    = STRING_TOKEN(STR_DEBUG_CONFIGURATION_TITLE);


  subtitle text = STRING_TOKEN(STR_NULL_STRING);

  subtitle text = STRING_TOKEN(STR_OSDBG_STRING);

  oneof varid  = Setup.OsDbgEnable,
    prompt   = STRING_TOKEN (STR_OSDBG_PROMPT),
    help     = STRING_TOKEN (STR_OSDBG_HELP),
    option text = STRING_TOKEN (STR_DISABLE), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
    option text = STRING_TOKEN (STR_ENABLE),  value = 1, flags = RESET_REQUIRED;
  endoneof;

  subtitle text = STRING_TOKEN(STR_NULL_STRING);

  subtitle text = STRING_TOKEN(STR_TXE_DEBUG_OPTION_STRING);

  oneof varid   = SETUP_DATA.SeCEOPEnable,
    prompt      = STRING_TOKEN(STR_TXE_END_OF_POST_PROMPT),
    help        = STRING_TOKEN(STR_TXE_END_OF_POST_HELP),
    option text = STRING_TOKEN(STR_DISABLE), value = 0, flags = RESET_REQUIRED;
    option text = STRING_TOKEN(STR_ENABLE),  value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
  endoneof;

  subtitle text = STRING_TOKEN(STR_NULL_STRING);

  subtitle text = STRING_TOKEN(STR_PTT_DEBUG_OPTION_STRING);

  oneof varid   = SETUP_DATA.PttSuppressCommandSend,
    prompt      = STRING_TOKEN(STR_PTT_SUPPRESS_COMMAND_PROMPT),
    help        = STRING_TOKEN(STR_PTT_SUPPRESS_COMMAND_HELP),
    option text = STRING_TOKEN(STR_DISABLE), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
    option text = STRING_TOKEN(STR_ENABLE),  value = 1, flags = RESET_REQUIRED;
  endoneof;

  subtitle text = STRING_TOKEN(STR_NULL_STRING);

  subtitle text = STRING_TOKEN(STR_TDO_STRING);
    oneof varid   = Setup.TDO,
      prompt      = STRING_TOKEN(STR_TDO_PROMPT),
      help        = STRING_TOKEN(STR_TDO_HELP),
      option text = STRING_TOKEN(STR_DISABLE),   value = 0, flags = RESET_REQUIRED;
      option text = STRING_TOKEN(STR_ENABLE),    value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
      option text = STRING_TOKEN(STR_AUTOMATIC), value = 2, flags = RESET_REQUIRED;
    endoneof;

  subtitle text = STRING_TOKEN(STR_NULL_STRING);
    oneof   varid   = Setup.SMRREnable,
      prompt      = STRING_TOKEN(STR_SMRR),
      help        = STRING_TOKEN(STR_SMRR_HELP),
      option text = STRING_TOKEN(STR_DISABLE), value = 0, flags = RESET_REQUIRED;
      option text = STRING_TOKEN(STR_ENABLE),  value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
    endoneof;

  subtitle text = STRING_TOKEN(STR_NULL_STRING);
    oneof   varid   = Setup.Max2G,
      prompt      = STRING_TOKEN(STR_MAX_MEM_2G),
      help        = STRING_TOKEN(STR_MAX_MEM_2G_HELP),
      option text = STRING_TOKEN(STR_ENABLE), value = 0, flags = RESET_REQUIRED;
      option text = STRING_TOKEN(STR_DISABLE),  value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
    endoneof; 

#ifdef PRAM_SUPPORT
  subtitle text = STRING_TOKEN(STR_NULL_STRING);
    oneof varid   = Setup.Pram,
        prompt      = STRING_TOKEN (STR_PRAM_PROMPT),
        help        = STRING_TOKEN (STR_PRAM_HELP),
        option text = STRING_TOKEN (STR_PRAM_64MB),  value = 0x33, flags = RESET_REQUIRED;
        option text = STRING_TOKEN (STR_PRAM_16MB),  value = 0x32, flags = RESET_REQUIRED;
        option text = STRING_TOKEN (STR_PRAM_4MB),   value = 0x31, flags = RESET_REQUIRED;
        option text = STRING_TOKEN (STR_DISABLE),    value = 0x30, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
    endoneof;
#endif


  subtitle text = STRING_TOKEN(STR_OS_DNX_STRING);

    oneof varid   = Setup.IshI2c0PullUp,
      prompt      = STRING_TOKEN (STR_ISH_I2C0_GPIO_PULL_ENABLE_PROMPT),
      help        = STRING_TOKEN (STR_ISH_I2C0_GPIO_PULL_HELP),
      option text = STRING_TOKEN(STR_ENABLE),  value = 1, flags = DEFAULT | RESET_REQUIRED;
      option text = STRING_TOKEN(STR_DISABLE), value = 0, flags = RESET_REQUIRED;
    endoneof;

    oneof varid   = Setup.IshI2c1PullUp,
      prompt      = STRING_TOKEN (STR_ISH_I2C1_GPIO_PULL_ENABLE_PROMPT),
      help        = STRING_TOKEN (STR_ISH_I2C1_GPIO_PULL_HELP),
      option text = STRING_TOKEN(STR_ENABLE),  value = 1, flags = DEFAULT | RESET_REQUIRED;
      option text = STRING_TOKEN(STR_DISABLE), value = 0, flags = RESET_REQUIRED;
    endoneof;

  subtitle text = STRING_TOKEN(STR_NULL_STRING);

  subtitle text = STRING_TOKEN(STR_PROC_TARCE_STRING);

     oneof varid   = Setup.ProcTraceMemSize,
        prompt      = STRING_TOKEN(STR_PROC_TRACE_MEM_SIZE_PROMPT),
        help        = STRING_TOKEN(STR_PROC_TRACE_MEM_SIZE_HELP),
        option text = STRING_TOKEN(STR_DISABLE), value = 0xFF, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
        option text = STRING_TOKEN(STR_4KB),      value = 0,    flags = RESET_REQUIRED;
        option text = STRING_TOKEN(STR_8KB),      value = 1,    flags = RESET_REQUIRED;
        option text = STRING_TOKEN(STR_16KB),     value = 2,    flags = RESET_REQUIRED;
        option text = STRING_TOKEN(STR_32KB),     value = 3,    flags = RESET_REQUIRED;
        option text = STRING_TOKEN(STR_64KB),     value = 4,    flags = RESET_REQUIRED;
        option text = STRING_TOKEN(STR_128KB),    value = 5,    flags = RESET_REQUIRED;
        option text = STRING_TOKEN(STR_256KB),    value = 6,    flags = RESET_REQUIRED;
        option text = STRING_TOKEN(STR_512KB),    value = 7,    flags = RESET_REQUIRED;
        option text = STRING_TOKEN(STR_1MB),      value = 8,    flags = RESET_REQUIRED;
        option text = STRING_TOKEN(STR_2MB),      value = 9,    flags = RESET_REQUIRED;
        option text = STRING_TOKEN(STR_4MB),      value = 10,   flags = RESET_REQUIRED;
        option text = STRING_TOKEN(STR_8MB),      value = 11,   flags = RESET_REQUIRED;
        option text = STRING_TOKEN(STR_16MB),     value = 12,   flags = RESET_REQUIRED;
        option text = STRING_TOKEN(STR_32MB),     value = 13,   flags = RESET_REQUIRED;
        option text = STRING_TOKEN(STR_64MB),     value = 14,   flags = RESET_REQUIRED;
        option text = STRING_TOKEN(STR_128MB),    value = 15,   flags = RESET_REQUIRED;
     endoneof;


      suppressif  ideqval Setup.ProcTraceMemSize == 0xFF;
          oneof varid   = Setup.ProcTraceEnable,
            prompt      = STRING_TOKEN(STR_PROC_TRACE_ENABLE_PROMPT),
            help        = STRING_TOKEN(STR_PROC_TRACE_ENABLE_HELP),
            option text = STRING_TOKEN(STR_DISABLED_STRING), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
            option text = STRING_TOKEN(STR_ENABLED_STRING),  value = 1, flags = RESET_REQUIRED;
          endoneof;

          oneof varid   = Setup.ProcTraceOutputScheme,
            prompt      = STRING_TOKEN(STR_PROC_TRACE_OUTPUT_SCHEME_PROMPT),
            help        = STRING_TOKEN(STR_PROC_TRACE_OUTPUT_SCHEME_HELP),
            option text = STRING_TOKEN(STR_SINGLE_RANGE_OUTPUT), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
            option text = STRING_TOKEN(STR_TOPA_OUTPUT),         value = 1, flags = RESET_REQUIRED;
          endoneof;
      endif;

  subtitle text = STRING_TOKEN(STR_NULL_STRING);
  subtitle text = STRING_TOKEN(STR_DATA_CLEAR_STRING);
  text
    help   = STRING_TOKEN(STR_DATA_CLEAR_HELP),
    text   = STRING_TOKEN(STR_DATA_CLEAR),
    text   = STRING_TOKEN(STR_NULL_STRING),
    flags  = INTERACTIVE,
    key    = 0x1239; //KEY_DATA_CLEAR_KEYS;

  subtitle text = STRING_TOKEN(STR_NULL_STRING);
  
  goto DEBUG_NPK_FORM_ID,
    prompt = STRING_TOKEN(STR_DEBUG_NPK_TITLE),
    help   = STRING_TOKEN(STR_DEBUG_NPK_HELP);

endform;

  //
  // NPK Configuration
  //
  form formid     = DEBUG_NPK_FORM_ID,
    title         = STRING_TOKEN(STR_DEBUG_NPK_TITLE);

    oneof varid   = Setup.NpkEn,
      prompt      = STRING_TOKEN(STR_NPK_ENABLE_PROMPT),
      help        = STRING_TOKEN(STR_NPK_ENABLE_HELP),
      option text = STRING_TOKEN(STR_DISABLE),  value = 0, flags = RESET_REQUIRED;
      option text = STRING_TOKEN(STR_ENABLE),   value = 1, flags = RESET_REQUIRED;
      option text = STRING_TOKEN(STR_DEBUGGER), value = 2, flags = RESET_REQUIRED;
      option text = STRING_TOKEN(STR_AUTO),     value = 3, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
    endoneof;

    suppressif ideqval Setup.NpkEn == 2;

     oneof varid   = Setup.FwTraceEn,
       prompt      = STRING_TOKEN(STR_NPK_FWEN_PROMPT),
       help        = STRING_TOKEN(STR_NPK_FWEN_HELP),
       option text = STRING_TOKEN(STR_DISABLE), value = 0, flags = RESET_REQUIRED;
       option text = STRING_TOKEN(STR_ENABLE),  value = 1, flags = DEFAULT | MANUFACTURING |RESET_REQUIRED;
     endoneof;

     oneof varid   = Setup.SwTraceEn,
       prompt      = STRING_TOKEN(STR_NPK_SWEN_PROMPT),
       help        = STRING_TOKEN(STR_NPK_SWEN_HELP),
       option text = STRING_TOKEN(STR_DISABLE), value = 0, flags =  DEFAULT | MANUFACTURING |RESET_REQUIRED;
       option text = STRING_TOKEN(STR_ENABLE), value = 1, flags =  RESET_REQUIRED;
     endoneof;

     oneof varid   = Setup.FwTraceDestination,
       prompt      = STRING_TOKEN(STR_NPK_FWDESTINATION_PROMPT),
       help        = STRING_TOKEN(STR_NPK_FWDESTINATION_HELP),
       option text = STRING_TOKEN(STR_MEMORY0), value = 1, flags = RESET_REQUIRED;
       option text = STRING_TOKEN(STR_PTI),     value = 4, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
       option text = STRING_TOKEN(STR_USB3),    value = 2, flags = RESET_REQUIRED;
       option text = STRING_TOKEN(STR_BSSB),    value = 3, flags = RESET_REQUIRED;
     endoneof;

     oneof varid   = Setup.RecoverDump,
       prompt      = STRING_TOKEN(STR_NPK_RECOVERY_DUMP_PROMPT),
       help        = STRING_TOKEN(STR_NPK_RECOVERY_DUMP_HELP),
       option text = STRING_TOKEN(STR_DISABLE), value = 0, flags = DEFAULT | MANUFACTURING |RESET_REQUIRED;
       option text = STRING_TOKEN(STR_ENABLE),  value = 1, flags = RESET_REQUIRED;
     endoneof;

     oneof varid   = Setup.Msc0Size,
       prompt      = STRING_TOKEN(STR_NPK_MSC0SIZE_PROMPT),
       help        = STRING_TOKEN(STR_NPK_MSC0SIZE_HELP),
       option text = STRING_TOKEN(STR_NONE),  value = 0,    flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
       option text = STRING_TOKEN(STR_1MB),   value = 1,    flags = RESET_REQUIRED;
       option text = STRING_TOKEN(STR_8MB),   value = 8,    flags = RESET_REQUIRED;
       option text = STRING_TOKEN(STR_64MB),  value = 64,   flags = RESET_REQUIRED;
       option text = STRING_TOKEN(STR_128MB), value = 128,  flags = RESET_REQUIRED;
       option text = STRING_TOKEN(STR_256MB), value = 256,  flags = RESET_REQUIRED;
       option text = STRING_TOKEN(STR_512MB), value = 512,  flags = RESET_REQUIRED;
       option text = STRING_TOKEN(STR_1GB),   value = 1024, flags = RESET_REQUIRED;
     endoneof;
     oneof varid   = Setup.Msc0Wrap,
       prompt      = STRING_TOKEN(STR_NPK_MSC0WRAP_PROMPT),
       help        = STRING_TOKEN(STR_NPK_MSC0WRAP_HELP),
       option text = STRING_TOKEN(STR_NOWRAP), value = 0, flags = RESET_REQUIRED;
       option text = STRING_TOKEN(STR_WRAP),   value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
     endoneof;
     oneof varid   = Setup.Msc1Size,
       prompt      = STRING_TOKEN(STR_NPK_MSC1SIZE_PROMPT),
       help        = STRING_TOKEN(STR_NPK_MSC1SIZE_HELP),
       option text = STRING_TOKEN(STR_NONE),  value = 0,    flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
       option text = STRING_TOKEN(STR_1MB),   value = 1,    flags = RESET_REQUIRED;
       option text = STRING_TOKEN(STR_8MB),   value = 8,    flags = RESET_REQUIRED;
       option text = STRING_TOKEN(STR_64MB),  value = 64,   flags = RESET_REQUIRED;
       option text = STRING_TOKEN(STR_128MB), value = 128,  flags = RESET_REQUIRED;
       option text = STRING_TOKEN(STR_256MB), value = 256,  flags = RESET_REQUIRED;
       option text = STRING_TOKEN(STR_512MB), value = 512,  flags = RESET_REQUIRED;
       option text = STRING_TOKEN(STR_1GB),   value = 1024, flags = RESET_REQUIRED;
     endoneof;
     oneof varid   = Setup.Msc1Wrap,
       prompt      = STRING_TOKEN(STR_NPK_MSC1WRAP_PROMPT),
       help        = STRING_TOKEN(STR_NPK_MSC1WRAP_HELP),
       option text = STRING_TOKEN(STR_NOWRAP), value = 0, flags = RESET_REQUIRED;
       option text = STRING_TOKEN(STR_WRAP),   value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
     endoneof;

     oneof varid   = Setup.PtiMode,
       prompt      = STRING_TOKEN(STR_NPK_PTIMODE_PROMPT),
       help        = STRING_TOKEN(STR_NPK_PTIMODE_HELP),
       option text = STRING_TOKEN(STR_OFF), value = 4, flags = RESET_REQUIRED;
       option text = STRING_TOKEN(STR_X4),  value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
       option text = STRING_TOKEN(STR_X8),  value = 2, flags = RESET_REQUIRED;
       option text = STRING_TOKEN(STR_X16), value = 8, flags = RESET_REQUIRED;
     endoneof;

     oneof varid   = Setup.PtiTraining,
       prompt      = STRING_TOKEN(STR_NPK_PTITRAINING_PROMPT),
       help        = STRING_TOKEN(STR_NPK_PTITRAINING_HELP),
       option text = STRING_TOKEN(STR_OFF), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
       option text = STRING_TOKEN(STR_1),   value = 1, flags = RESET_REQUIRED;
       option text = STRING_TOKEN(STR_2),   value = 2, flags = RESET_REQUIRED;
       option text = STRING_TOKEN(STR_3),   value = 3, flags = RESET_REQUIRED;
       option text = STRING_TOKEN(STR_4),   value = 4, flags = RESET_REQUIRED;
       option text = STRING_TOKEN(STR_5),   value = 5, flags = RESET_REQUIRED;
       option text = STRING_TOKEN(STR_6),   value = 6, flags = RESET_REQUIRED;
     endoneof;

     oneof varid   = Setup.PtiSpeed,
       prompt      = STRING_TOKEN(STR_NPK_PTISPEED_PROMPT),
       help        = STRING_TOKEN(STR_NPK_PTISPEED_HELP),
       option text = STRING_TOKEN(STR_FULL),    value = 0, flags = RESET_REQUIRED;
       option text = STRING_TOKEN(STR_HALF),    value = 1, flags = RESET_REQUIRED;
       option text = STRING_TOKEN(STR_QUARTER), value = 2, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
     endoneof;

    oneof varid   = Setup.PunitMlvl,
      prompt    = STRING_TOKEN(STR_PUINT_MESSAGE_LEVEL_PROMPT),
      help      = STRING_TOKEN(STR_PUINT_MESSAGE_LEVEL_HELP),
      option text = STRING_TOKEN(STR_DEBUG_MESSAGE_LEVEL_0), value = 0, flags = RESET_REQUIRED;
      option text = STRING_TOKEN(STR_DEBUG_MESSAGE_LEVEL_1), value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
      option text = STRING_TOKEN(STR_DEBUG_MESSAGE_LEVEL_2), value = 2, flags = RESET_REQUIRED;
      option text = STRING_TOKEN(STR_DEBUG_MESSAGE_LEVEL_3), value = 3, flags = RESET_REQUIRED;
      option text = STRING_TOKEN(STR_DEBUG_MESSAGE_LEVEL_4), value = 4, flags = RESET_REQUIRED;
    endoneof;

    oneof varid   = Setup.PmcMlvl,
      prompt    = STRING_TOKEN(STR_PMC_MESSAGE_LEVEL_PROMPT),
      help      = STRING_TOKEN(STR_PMC_MESSAGE_LEVEL_HELP),
      option text = STRING_TOKEN(STR_DEBUG_MESSAGE_LEVEL_0), value = 0, flags = RESET_REQUIRED;
      option text = STRING_TOKEN(STR_DEBUG_MESSAGE_LEVEL_1), value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
      option text = STRING_TOKEN(STR_DEBUG_MESSAGE_LEVEL_2), value = 2, flags = RESET_REQUIRED;
      option text = STRING_TOKEN(STR_DEBUG_MESSAGE_LEVEL_3), value = 3, flags = RESET_REQUIRED;
      option text = STRING_TOKEN(STR_DEBUG_MESSAGE_LEVEL_4), value = 4, flags = RESET_REQUIRED;
    endoneof;

    endif;

  endform; //End of DEBUG_NPK_FORM_ID
